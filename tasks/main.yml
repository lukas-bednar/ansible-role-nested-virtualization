---
- name: Check if Intel virtualization is supported
  shell: |
    set -e
    grep vmx {{ nested_virtualization_cpuinfo }}
  changed_when: no
  ignore_errors: yes
  register: intel_processor

- name: Check if AMD virtualization is supported
  shell: |
    set -e
    grep svm {{ nested_virtualization_cpuinfo }}
  changed_when: no
  ignore_errors: yes
  register: amd_processor

- name: Fail in case no Intel or AMD virtualization support is not detected.
  fail:
    msg: "The system doesn't seem to have Intel nor AMD virtualization support."
  when: intel_processor.rc != 0 and amd_processor.rc != 0

- name: Set fact for Intel virtualization
  set_fact:
    nested_virtualization_module_name: "kvm_intel"
  when: intel_processor.rc == 0

- name: Set fact for AMD virtualization
  set_fact:
    nested_virtualization_module_name: "kvm_amd"
  when: amd_processor.rc == 0

- name: Set fact for nested virtualization test path
  set_fact:
    nested_virtualization_test_path: "/sys/module/{{ nested_virtualization_module_name }}/parameters/nested"

- name: "Ensure {{ nested_virtualization_module_name }} module is available and loaded"
  modprobe:
    name: "{{ nested_virtualization_module_name }}"
    state: present

- name: Test status of nested virtualization
  shell: |
    set -e
    cat {{ nested_virtualization_test_path }}
  changed_when: no
  register: actual_status

- name: "Persist configuration in {{ nested_virtualization_kvm_config }}"
  lineinfile:
    path: "{{ nested_virtualization_kvm_config }}"
    regexp: "^options {{ nested_virtualization_module_name }}.*$"
    line: "options {{ nested_virtualization_module_name }} nested=1"
    create: yes
  when:
    - nested_virtualization_state in ["present", "enabled"]

- name: "Persist configuration in {{ nested_virtualization_kvm_config }}"
  lineinfile:
    path: "{{ nested_virtualization_kvm_config }}"
    regexp: "^options {{ nested_virtualization_module_name }}.*$"
    state: absent
    create: yes
  when:
    - nested_virtualization_state in ["absent", "disabled"]

# Desired state is enabled but real state is off
- name: "Reload {{ nested_virtualization_module_name }} module"
  include_tasks: reload-module.yml
  when:
    - nested_virtualization_state in ["present", "enabled"]
    - actual_status.stdout in ['N', '0']

# Desired state is disabled but real state is on
- name: "Reload {{ nested_virtualization_module_name }} module"
  include_tasks: reload-module.yml
  when:
    - nested_virtualization_state in ["absent", "disabled"]
    - actual_status.stdout in ['Y', '1']
